openapi: 3.0.0
servers:
  - description: API Simpsons Trivia Flyio server
    url: https://simpsons-trivia.fly.dev/api/v1
  - description: API Simpsons Trivia localhost
    url: http://localhost:3001/api/v1

info:
  description: API para el juego de trivia de Los Simpson
  version: "1.3"
  title: Simpsons Trivia API
  contact:
    email: tomas.saintromain@gmail.com
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'

tags:
  - name: Public
    description: Endpoints públicos que no requieren autenticación
  - name: Game
    description: Endpoints relacionados con el juego de trivia
  - name: Authentication
    description: Gestión de usuarios y sesiones
  - name: Session
    description: Manejo de sesiones anónimas y autenticadas
  - name: Admin
    description: Endpoints protegidos solo para administradores

paths:
  /healthcheck:
    get:
      tags:
        - Public
      summary: Verificar estado de la API
      description: Verifica si la API está funcionando correctamente
      responses:
        '200':
          description: Estado de la API
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  timestamp:
                    type: string
                    format: date-time

  /session-status:
    get:
      tags:
        - Session
      summary: Obtener estado de la sesión actual
      description: Verifica el estado de la sesión y tiempo restante para usuarios anónimos
      responses:
        '200':
          description: Estado de la sesión actual
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      isAnonymous:
                        type: boolean
                      timeRemaining:
                        type: integer
                      shouldWarn:
                        type: boolean
                      sessionExpires:
                        type: string
                        format: date-time

  /quote/random:
    get:
      tags:
        - Game
      summary: Obtener pregunta aleatoria
      description: Retorna una frase aleatoria con 4 opciones de personajes (1 correcta y 3 incorrectas)
      responses:
        '200':
          description: Pregunta aleatoria con opciones
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: ID único de la frase
                        example: 102
                      quote:
                        type: string
                        description: Frase del personaje
                        example: "A darle átomos!"
                      options:
                        type: array
                        description: Lista de personajes posibles con sus IDs
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID único del personaje
                            name:
                              type: string
                              description: Nombre del personaje
                        example:
                          [
                            { id: 3, name: "Helen Lovejoy" },
                            { id: 1, name: "Bart Simpson" },
                            { id: 35, name: "Hombre Radioactivo" },
                            { id: 2, name: "Homero Simpson" }
                          ]

  /quotes/{id}/answer:
    post:
      tags:
        - Game
      summary: Enviar respuesta a una pregunta
      description: Verifica si la respuesta es correcta y actualiza el puntaje
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la pregunta
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                answer:
                  type: integer
                  description: Nombre del personaje seleccionado
                time:
                  type: integer
                  description: Tiempo de respuesta
              required:
                - answer
      responses:
        '200':
          description: Resultado de la respuesta
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  result:
                    type: object
                    properties:
                      correct:
                        type: boolean
                      score:
                        type: integer
                      time:
                        type: integer
                      message:
                        type: string

  /quotes/bycharacter/{characterId}:
    get:
      tags:
        - Game
      summary: Obtener frases por personaje
      description: Retorna todas las frases de un personaje específico
      parameters:
        - in: path
          name: characterId
          required: true
          schema:
            type: integer
          description: ID del personaje
      responses:
        '200':
          description: Frases del personaje
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        quote:
                          type: string
                        character:
                          type: string

  /characters:
    get:
      tags:
        - Game
      summary: Obtener lista de personajes
      description: Retorna la lista de todos los personajes disponibles
      responses:
        '200':
          description: Lista de personajes
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string

  /login:
    post:
      tags:
        - Authentication
      summary: Iniciar sesión
      description: Autenticación de usuario registrado
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                          email:
                            type: string
                          username:
                            type: string

  /register:
    post:
      tags:
        - Authentication
      summary: Registrar nuevo usuario
      description: Crear una nueva cuenta de usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Registro exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  /logout:
    post:
      tags:
        - Authentication
      summary: Cerrar sesión
      description: Finaliza la sesión actual del usuario
      responses:
        '200':
          description: Logout exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  /users:
    get:
      tags:
        - Admin
      summary: Obtener lista de usuarios
      description: Retorna la lista de todos los usuarios registrados
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        email:
                          type: string
                        username:
                          type: string
                        role:
                          type: string

  /scores:
    get:
      tags:
        - Admin
      summary: Obtener puntajes de usuarios
      description: Retorna los puntajes de todos los usuarios
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de puntajes
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        user_id:
                          type: string
                        username:
                          type: string
                        score:
                          type: integer
                        last_played:
                          type: string
                          format: date-time

  /users/{userId}/role:
    patch:
      tags:
        - Admin
      summary: Cambiar rol de un usuario
      description: Modifica el rol de un usuario específico
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: ID del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  description: Nuevo rol del usuario
                  example: "admin"
      responses:
        '200':
          description: Rol actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Rol actualizado correctamente"

  /user/stats:
    get:
      tags:
        - Authentication
      summary: Obtener estadísticas del usuario
      description: Retorna las estadísticas del usuario autenticado, incluyendo puntajes y respuestas.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Estadísticas del usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      currentScore:
                        type: integer
                        description: Puntaje actual del usuario
                      highestScore:
                        type: integer
                        description: Mejor puntaje del usuario
                      lastScore:
                        type: integer
                        description: Último puntaje del usuario
                      answerTime:
                        type: integer
                        description: Tiempo promedio de respuesta en milisegundos
                      correctAnswers:
                        type: integer
                        description: Número de respuestas correctas
                      incorrectAnswers:
                        type: integer
                        description: Número de respuestas incorrectas
                      totalQuestions:
                        type: integer
                        description: Total de preguntas respondidas
                      accuracy:
                        type: string
                        description: Precisión en porcentaje

  /user/data:
    get:
      tags:
        - Authentication
      summary: Obtener datos del usuario
      description: Retorna la información del usuario autenticado, incluyendo nombre de usuario, etiqueta, email, y más.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Datos del usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: ID del usuario
                      username:
                        type: string
                        description: Nombre de usuario
                      user_tag:
                        type: string
                        description: Etiqueta del usuario
                      email:
                        type: string
                        description: Correo electrónico del usuario
                      image_url:
                        type: string
                        description: URL de la imagen del usuario (puede ser nulo)
                      supabase_user_id:
                        type: string
                        description: ID del usuario en Supabase
                      role:
                        type: string
                        description: Rol del usuario
                      created_at:
                        type: string
                        format: date-time
                        description: Fecha de creación de la cuenta

  /gameover:
    post:
      tags:
        - Game
      summary: Finalizar el juego y resetear puntaje
      description: Resetea el puntaje del usuario y devuelve el estado del juego.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Juego finalizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                    description: Mensaje de confirmación
                  data:
                    type: object
                    properties:
                      previousScore:
                        type: integer
                        description: Puntaje anterior antes del reset
                      highestScore:
                        type: integer
                        description: Mejor puntaje del usuario

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    QuoteResponse:
      type: object
      properties:
        success:
          type: boolean